@page "/habilidades/edit/{id:int}"
@using Frontend.DtoClasses
@inject HttpClient Http
@inject NavigationManager NavManager

<h3>Editar Habilidade</h3>

@if (habilidade == null)
{
    <p><em>Carregando a habilidade...</em></p>
}
else
{
    <div class="mb-3">
        <label for="nome">Nome:</label>
        <input id="nome" class="form-control" @bind="habilidade.Nome" />
    </div>
    <div class="mb-3">
        <label for="categoria">Categoria ID:</label>
        <input id="categoria" type="number" class="form-control" @bind="habilidade.Categoriaid" />
    </div>
    <div class="mb-3">
        <label for="criador">Criador ID:</label>
        <input id="criador" type="number" class="form-control" @bind="habilidade.Criadorid" />
    </div>

    <button class="btn btn-success" @onclick="Salvar">Salvar</button>
    <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
}

@code {
    [Parameter]
    public int id { get; set; }

    private HabilidadeDto? habilidade;

    protected override async Task OnParametersSetAsync()
    {
        // Chama o endpoint GET para carregar a habilidade a editar
        habilidade = await Http.GetFromJsonAsync<HabilidadeDto>($"api/habilidades/{id}");
        if (habilidade == null)
        {
            await AlertAsync("Habilidade não encontrada.");
            NavManager.NavigateTo("/habilidades");
        }
    }

    private async Task Salvar()
    {
        if (habilidade == null)
            return;

        // Chama o endpoint PUT para atualizar a habilidade
        var response = await Http.PutAsJsonAsync($"api/habilidades/{habilidade.Habilidadeid}", habilidade);
        if (response.IsSuccessStatusCode)
        {
            NavManager.NavigateTo("/habilidades");
        }
        else
        {
            var erro = await response.Content.ReadAsStringAsync();
            await AlertAsync($"Erro ao atualizar a habilidade: {erro}");
        }
    }

    private void Cancelar()
    {
        NavManager.NavigateTo("/habilidades");
    }

    private Task AlertAsync(string message)
    {
        Console.WriteLine(message);
        return Task.CompletedTask;
    }
}
